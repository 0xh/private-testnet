{"name":"Monero Examples","tagline":"private-testnet-network","body":"# Setting private Monero testnet network\r\n\r\nHaving private [Monero](https://getmonero.org/) testnet network can be very useful, as you can play around\r\nwith Monero without risking making expensive mistakes on real network. However,\r\nit is not clear how to set up a private testnet network. In this example, this\r\nis demonstrated.\r\n\r\nThe example is executed on Xubuntu 15.10 x64 using current (as of Dec 2015)\r\ngithub version of Monero. Not sure if this will work with official, stable version\r\nfrom 2014.  How to compile latest monero is shown here:\r\n[compile-monero-ubuntu-1510](http://moneroexamples.github.io/compile-monero-ubuntu-1510/).\r\n\r\n\r\nThe testnet Monero network will include 3 nodes, each with its own blockchain database\r\nand a corresponding wallet on a single computer. The three testnet nodes will be listening\r\nat the following ports 28080, 38080 and 48080, respectively.\r\n\r\n\r\nThe example is based on the following reddit posts:\r\n - [How do I make my own testnet network, with e.g. two private nodes and private blockchain?](https://www.reddit.com/r/Monero/comments/3x5qwo/how_do_i_make_my_own_testnet_network_with_eg_two/)\r\n - [Does unlocking balance in testnet mode differers from the normal mode?](https://www.reddit.com/r/Monero/comments/3xj9vp/does_unlocking_balance_in_testnet_mode_differers/)\r\n\r\nAlso much thanks go to reddit's user [o--sensei](https://www.reddit.com/user/o--sensei) for\r\n  help with setting up the initial testnet network.\r\n\r\n## Step 1: Create testnet wallets\r\n\r\nEach of the nodes will have a corresponding wallet. Thus we create the wallets first.\r\nI assume that the wallets will be called `wallet_01.bin`,\r\n`wallet_02.bin` and `wallet_03.bin`. Also, I assume that the wallets will be located\r\nin `~/testnet` folder.\r\n\r\nCreate the `~/testnet` folder and go into it:\r\n\r\n```bash\r\nmkdir ~/testnet && cd ~/testnet\r\n```\r\n\r\nFor testnet network, I prefer to have fixed addresses for each wallet and no password.\r\nThe reason is that it is much easier to work with such testnet wallets.\r\n\r\nExecute the following commands to create three wallets without password.\r\n\r\n**For wallet_01.bin:**\r\n```bash\r\n/opt/bitmonero/simplewallet --testnet --generate-new-wallet ~/testnet/wallet_01.bin  --restore-deterministic-wallet --electrum-seed=\"sequence atlas unveil summon pebbles tuesday beer rudely snake rockets different fuselage woven tagged bested dented vegan hover rapid fawns obvious muppet randomly seasons randomly\" --password \"\" --log-file ~/testnet/wallet_01.log\r\n```\r\n\r\nResulting address:\r\n```\r\n9wviCeWe2D8XS82k2ovp5EUYLzBt9pYNW2LXUFsZiv8S3Mt21FZ5qQaAroko1enzw3eGr9qC7X1D7Geoo2RrAotYPwq9Gm8\r\n```\r\n\r\nNow exit the wallet created using `exit` command. We need only addresses for now.\r\nThe `simplewallet` may crash as the blockchain is empty at this stage.\r\nWe need to mine some blocks before the wallets can be used.\r\n\r\nThe `simplewallet` options are:\r\n\r\n - *testnet*   - Used to deploy test nets. The daemon must be launched with --testnet flag.\r\n - *generate-new-wallet*    - Generate new wallet and save it to <arg> or <address>.wallet by default.\r\n - *restore-deterministic-wallet* - Recover wallet using electrum-stylemnemonic.\r\n - *electrum-seed* - Specify electrum seed for wallet recovery/creation.\r\n - *password* - Wallet password.\r\n - *log-file*  - Specify log file.\r\n\r\n**For wallet_02.bin:**\r\n```bash\r\n/opt/bitmonero/simplewallet --testnet --generate-new-wallet ~/testnet/wallet_02.bin  --restore-deterministic-wallet --electrum-seed=\"deftly large tirade gumball android leech sidekick opened iguana voice gels focus poaching itches network espionage much jailed vaults winter oatmeal eleven science siren winter\" --password \"\" --log-file ~/testnet/wallet_02.log\r\n```\r\n\r\nResulting address:\r\n```\r\n9wq792k9sxVZiLn66S3Qzv8QfmtcwkdXgM5cWGsXAPxoQeMQ79md51PLPCijvzk1iHbuHi91pws5B7iajTX9KTtJ4bh2tCh\r\n```\r\n\r\nNow exit the wallet created using `exit` command.\r\n\r\nThe `simplewallet` options are as before.\r\n\r\n**For wallet_03.bin:**\r\n```bash\r\n/opt/bitmonero/simplewallet --testnet --generate-new-wallet ~/testnet/wallet_03.bin  --restore-deterministic-wallet --electrum-seed=\"upstairs arsenic adjust emulate karate efficient demonstrate weekday kangaroo yoga huts seventh goes heron sleepless fungal tweezers zigzags maps hedgehog hoax foyer jury knife karate\" --password \"\" --log-file ~/testnet/wallet_03.log\r\n```\r\n\r\nResulting address:\r\n```\r\nA2rgGdM78JEQcxEUsi761WbnJWsFRCwh1PkiGtGnUUcJTGenfCr5WEtdoXezutmPiQMsaM4zJbpdH5PMjkCt7QrXAhV8wDB\r\n```\r\n\r\nNow exit the wallet created using `exit` command.\r\n\r\nThe `simplewallet` options are as before.\r\n\r\n## Step 2: Start first node\r\n\r\nThe node will listen for connections at port 28080 and connect to the two other nodes, i.e., those on ports 38080 and 48080. It will store its blockchain in `~/testnet/node_01`.\r\n\r\n```bash\r\n/opt/bitmonero/bitmonerod --testnet --no-igd --hide-my-port --testnet-data-dir ~/testnet/node_01 --p2p-bind-ip 127.0.0.1 --log-level 1 --add-exclusive-node 127.0.0.1:38080 --add-exclusive-node 127.0.0.1:48080\r\n```\r\n\r\nThe `bitmonerod` options are:\r\n\r\n - *testnet*   - Run on testnet. The wallet must be launched with --testnet flag.\r\n - *no-igd*    - Disable UPnP port mapping.\r\n - *hide-my-port* - Do not announce yourself as peerlist candidate.\r\n - *testnet-data-dir* - Specify testnet data directory.\r\n - *p2p-bind-ip* - Interface for p2p network protocol.\r\n - *log-level*  - Log level.\r\n - *add-exclusive-node* - Specify list of peers to connect to  only. If this option is given the options add-priority-node and seed-node are ignored.\r\n\r\n## Step 3: Start second node\r\n\r\nThe node will listen for connections at port 38080 and connect to the two other nodes, i.e., those on ports 28080 and 48080. It will store its blockchain in `~/testnet/node_02`.\r\n\r\n```bash\r\n/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 38080 --testnet-rpc-bind-port 38081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_02 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:48080\r\n```\r\n\r\nAdditional `bitmonerod` options are:\r\n\r\n - *testnet-p2p-bind-port* - Port for testnet p2p network protocol.\r\n - *testnet-rpc-bind-port* - Port for testnet RPC server.    \r\n\r\n\r\n## Step 4: Start third node\r\n\r\nThe node will listen for connections at port 48080 and connect to the two other nodes, i.e., those on ports 28080 and 38080. It will store its blockchain in `~/testnet/node_03`.\r\n\r\n\r\n```bash\r\n/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 48080 --testnet-rpc-bind-port 48081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_03 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:38080\r\n```\r\n\r\n`bitmonerod` options as before, but with different ports.\r\n\r\n## Step 5: Start mining\r\n\r\nHow you mine is up to you now. You can mine only for the first wallet, and keep other two empty for now,\r\nor mine in two nodes, or all three of them.\r\n\r\nFor example, to mine into two first wallets, the following commands can be used:\r\n\r\n\r\nin node_01 (mining to the first wallet):\r\n```\r\nstart_mining  9wviCeWe2D8XS82k2ovp5EUYLzBt9pYNW2LXUFsZiv8S3Mt21FZ5qQaAroko1enzw3eGr9qC7X1D7Geoo2RrAotYPwq9Gm8 1\r\n```\r\n\r\nin node_02 (mining to the second wallet):\r\n```\r\nstart_mining  9wq792k9sxVZiLn66S3Qzv8QfmtcwkdXgM5cWGsXAPxoQeMQ79md51PLPCijvzk1iHbuHi91pws5B7iajTX9KTtJ4bh2tCh 1\r\n```\r\n\r\nin node_03 (mining to the first wallet as well):\r\n```\r\nstart_mining  9wviCeWe2D8XS82k2ovp5EUYLzBt9pYNW2LXUFsZiv8S3Mt21FZ5qQaAroko1enzw3eGr9qC7X1D7Geoo2RrAotYPwq9Gm8 1\r\n```\r\n\r\nAs can be seen, both node_01 and node_03 mine to the first wallet. The third wallet\r\nis not used for mining in this example. The reason is that it will receive xmr,\r\nthrough transfers, from the remaining wallets.\r\n\r\n## Step 6: Start the wallets\r\n\r\nwallet_01:\r\n```\r\n/opt/bitmonero/simplewallet --testnet --trusted-daemon --wallet-file ~/testnet/wallet_01.bin --password \"\" --log-file ~/testnet/wallet_01.log\r\n```\r\n\r\nwallet_02:\r\n```\r\n/opt/bitmonero/simplewallet --testnet --daemon-port 38081 --wallet-file ~/testnet/wallet_02.bin --password \"\" --log-file ~/testnet/wallet_02.log\r\n```\r\n\r\nwallet_03:\r\n```\r\n/opt/bitmonero/simplewallet --testnet --daemon-port 48081 --wallet-file ~/testnet/wallet_03.bin --password \"\" --log-file ~/testnet/wallet_03.log\r\n```\r\n\r\n\r\n## Testnet folder structure\r\n\r\nThe resulting `~/testnet` folder structure should be as follows:\r\n```bash\r\n./testnet/\r\n├── node_01\r\n│   ├── bitmonero.log\r\n│   └── lmdb\r\n│       ├── data.mdb\r\n│       └── lock.mdb\r\n├── node_02\r\n│   ├── bitmonero.log\r\n│   └── lmdb\r\n│       ├── data.mdb\r\n│       └── lock.mdb\r\n├── node_03\r\n│   ├── bitmonero.log\r\n│   └── lmdb\r\n│       ├── data.mdb\r\n│       └── lock.mdb\r\n├── wallet_01.bin\r\n├── wallet_01.bin.address.txt\r\n├── wallet_01.bin.keys\r\n├── wallet_01.log\r\n├── wallet_02.bin\r\n├── wallet_02.bin.address.txt\r\n├── wallet_02.bin.keys\r\n├── wallet_02.log\r\n├── wallet_03.bin\r\n├── wallet_03.bin.address.txt\r\n├── wallet_03.bin.keys\r\n└── wallet_03.log\r\n\r\n6 directories, 21 files\r\n```\r\n\r\n## Start nodes with mining\r\n\r\nOptionally, Nodes can be started so that the the mining starts as well. With this,\r\nthere is no need for manually lauching mining in each node after it starts.\r\n\r\nFor example, to start the three nodes so that they mine to first two wallets (like in step 5) :\r\n\r\n\r\nin node_01 (mining to the first wallet):\r\n\r\n\r\n```bash\r\n/opt/bitmonero/bitmonerod --testnet --no-igd --hide-my-port --testnet-data-dir ~/testnet/node_01 --p2p-bind-ip 127.0.0.1 --log-level 1 --add-exclusive-node 127.0.0.1:38080 --add-exclusive-node 127.0.0.1:48080 --start-mining 9wviCeWe2D8XS82k2ovp5EUYLzBt9pYNW2LXUFsZiv8S3Mt21FZ5qQaAroko1enzw3eGr9qC7X1D7Geoo2RrAotYPwq9Gm8 --mining-threads 1\r\n```\r\n\r\nin node_02 (mining to the second wallet):\r\n```bash\r\n/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 38080 --testnet-rpc-bind-port 38081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_02 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:48080 --start-mining 9wq792k9sxVZiLn66S3Qzv8QfmtcwkdXgM5cWGsXAPxoQeMQ79md51PLPCijvzk1iHbuHi91pws5B7iajTX9KTtJ4bh2tCh --mining-threads 1\r\n```\r\n\r\n\r\nin node_03 (mining to the first wallet as well):\r\n```bash\r\n/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 48080 --testnet-rpc-bind-port 48081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_03 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:38080 --start-mining 9wviCeWe2D8XS82k2ovp5EUYLzBt9pYNW2LXUFsZiv8S3Mt21FZ5qQaAroko1enzw3eGr9qC7X1D7Geoo2RrAotYPwq9Gm8 --mining-threads 1\r\n```\r\n\r\n\r\n## Commands' aliases\r\nThe comments used are rather long, so to speed things up, one can make aliases\r\nfor them. For example, by adding the following to `~/.bashrc`:\r\n\r\n```bash\r\nalias testmakewallet1='/opt/bitmonero/simplewallet --testnet --generate-new-wallet ~/testnet/wallet_01.bin  --restore-deterministic-wallet --electrum-seed=\"sequence atlas unveil summon pebbles tuesday beer rudely snake rockets different fuselage woven tagged bested dented vegan hover rapid fawns obvious muppet randomly seasons randomly\" --password \"\" --log-file ~/testnet/wallet_01.log'\r\n\r\nalias testmakewallet2='/opt/bitmonero/simplewallet --testnet --generate-new-wallet ~/testnet/wallet_02.bin  --restore-deterministic-wallet --electrum-seed=\"deftly large tirade gumball android leech sidekick opened iguana voice gels focus poaching itches network espionage much jailed vaults winter oatmeal eleven science siren winter\" --password \"\" --log-file ~/testnet/wallet_02.log'\r\n\r\nalias testmakewallet3='/opt/bitmonero/simplewallet --testnet --generate-new-wallet ~/testnet/wallet_03.bin  --restore-deterministic-wallet --electrum-seed=\"upstairs arsenic adjust emulate karate efficient demonstrate weekday kangaroo yoga huts seventh goes heron sleepless fungal tweezers zigzags maps hedgehog hoax foyer jury knife karate\" --password \"\" --log-file ~/testnet/wallet_03.log'\r\n\r\nalias testnode1=\"/opt/bitmonero/bitmonerod --testnet --no-igd --hide-my-port --testnet-data-dir ~/testnet/node_01 --p2p-bind-ip 127.0.0.1 --log-level 1 --add-exclusive-node 127.0.0.1:38080 --add-exclusive-node 127.0.0.1:48080\"\r\n\r\nalias testnode2=\"/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 38080 --testnet-rpc-bind-port 38081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_02 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:48080\"\r\n\r\nalias testnode3=\"/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 48080 --testnet-rpc-bind-port 48081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_03 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:38080\"\r\n\r\n\r\nalias testnode1andmine=\"/opt/bitmonero/bitmonerod --testnet --no-igd --hide-my-port --testnet-data-dir ~/testnet/node_01 --p2p-bind-ip 127.0.0.1 --log-level 1 --add-exclusive-node 127.0.0.1:38080 --add-exclusive-node 127.0.0.1:48080 --start-mining 9wviCeWe2D8XS82k2ovp5EUYLzBt9pYNW2LXUFsZiv8S3Mt21FZ5qQaAroko1enzw3eGr9qC7X1D7Geoo2RrAotYPwq9Gm8 --mining-threads 1\"\r\n\r\nalias testnode2andmine=\"/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 38080 --testnet-rpc-bind-port 38081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_02 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:48080 --start-mining 9wq792k9sxVZiLn66S3Qzv8QfmtcwkdXgM5cWGsXAPxoQeMQ79md51PLPCijvzk1iHbuHi91pws5B7iajTX9KTtJ4bh2tCh --mining-threads 1\"\r\n\r\nalias testnode3andmine=\"/opt/bitmonero/bitmonerod --testnet --testnet-p2p-bind-port 48080 --testnet-rpc-bind-port 48081 --no-igd --hide-my-port  --log-level 1 --testnet-data-dir ~/testnet/node_03 --p2p-bind-ip 127.0.0.1 --add-exclusive-node 127.0.0.1:28080 --add-exclusive-node 127.0.0.1:38080 --start-mining 9wviCeWe2D8XS82k2ovp5EUYLzBt9pYNW2LXUFsZiv8S3Mt21FZ5qQaAroko1enzw3eGr9qC7X1D7Geoo2RrAotYPwq9Gm8 --mining-threads 1\"\r\n\r\nalias teststartwallet1='/opt/bitmonero/simplewallet --testnet --trusted-daemon --wallet-file ~/testnet/wallet_01.bin --password \"\" --log-file ~/testnet/wallet_01.log'\r\n\r\nalias teststartwallet2='/opt/bitmonero/simplewallet --testnet --daemon-port 38081 --wallet-file ~/testnet/wallet_02.bin --password \"\" --log-file ~/testnet/wallet_02.log'\r\n\r\nalias teststartwallet3='/opt/bitmonero/simplewallet --testnet --daemon-port 48081 --wallet-file ~/testnet/wallet_03.bin --password \"\" --log-file ~/testnet/wallet_03.log'\r\n```\r\n\r\n## Making transfers\r\n\r\nMined blocked require confirmation of 60 blocks. So before you can make any transfers between the wallets, we need to mine at least 60 blocks. Until then, the wallets will have `unlocked balance` equal to 0. In contrast, for regular transfers between wallets to be unlocked it takes 6 blocks.\r\n\r\n## Example screenshots\r\n\r\n**Commands used to start the nodes and wallets:**\r\n![Before](https://raw.githubusercontent.com/moneroexamples/private-testnet/master/img/testnet_setup.jpg)\r\nThe above image shows the command used for each node (left column) and wallets (right column).\r\nEach row represents one node with the corresponding wallet.\r\n\r\n\r\n\r\n**After mining first few blocks:**\r\n![After](https://raw.githubusercontent.com/moneroexamples/private-testnet/master/img/testnet_run.jpg)\r\nThe above image shows the state of the nodes and wallets after first few blocks mined. We see\r\nthat the first two wallets already have some xmr, but their `unlocked balance` values are zero. For them\r\nto unlock the mined xmr, we need to mine at least 60 blocks.\r\n\r\n\r\n**After mining more than 60 blocks:**\r\n![After60](https://raw.githubusercontent.com/moneroexamples/private-testnet/master/img/testnet_run_60.jpg)\r\nAfter mining more than 60 blocks, the `unlocked balance` is no longer zero\r\nand we can start mining transfers between wallets.\r\n\r\n\r\n## How can you help?\r\n\r\nConstructive criticism, code and website edits are always good. They can be made through github.\r\n\r\nSome Monero are also welcome:\r\n```\r\n48daf1rG3hE1Txapcsxh6WXNe9MLNKtu7W7tKTivtSoVLHErYzvdcpea2nSTgGkz66RFP4GKVAsTV14v6G3oddBTHfxP6tU\r\n```    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}